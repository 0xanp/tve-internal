
daemon off;
# Heroku dynos have at least 4 cores
worker_processes <%= ENV['NGINX_WORKERS'] || 4 %>;

events {
    use epoll;
    accept_mutex on;
    worker_connections <%= ENV['NGINX_WORKER_CONNECTIONS'] || 1024 %>;
}

http {
    gzip on;
    gzip_comp_level 2;
    gzip_min_length 512;
    server_tokens off;

    log_format main '$time_iso8601 - $status $request - client IP: $http_x_forwarded_for - to $upstream_addr - upstream status: $upstream_status, upstream_response_time $upstream_response_time, request_time $request_time';
    access_log /dev/stdout main;
    # set the following to "debug" when diagnosing an issue
    error_log /dev/stdout notice;
    log_not_found on;

    include mime.types;
    default_type application/octet-stream;
    sendfile on;

    # Must read the body in 5 seconds.
    client_body_timeout <%= ENV['NGINX_CLIENT_BODY_TIMEOUT'] || 5 %>;

    server {
        listen <%= ENV["PORT"] %>;
        server_name tve-internal.herokuapp.com;
        keepalive_timeout 5;
        if ($http_x_forwarded_proto != "https") {
            return 301 https://$host$request_uri;
          }
        location / {
            proxy_pass http://127.0.0.1:8501/;
        }
        location ^~ /static {
            proxy_pass http://127.0.0.1:8501/static/;
        }
        location ^~ /healthz {
            proxy_pass http://127.0.0.1:8501/healthz;
        }
        location ^~ /vendor {
            proxy_pass http://127.0.0.1:8501/vendor;
        }
        location /stream {
            proxy_pass http://127.0.0.1:8501/stream;
            proxy_http_version 1.1;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $host;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_read_timeout 86400;
        }
     }
  }